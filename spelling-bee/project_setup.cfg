# set shortcuts
export PROJ=$(pwd)
export DATA=$PROJ/data
export YEAR=2020

# set aliases
alias sbs="cd $PROJ; sudo python3 $PROJ/spelling_bee.py study"
alias sbp="cd $PROJ; sudo python3 $PROJ/spelling_bee.py practice"
alias sbt="cd $PROJ; sudo python3 $PROJ/spelling_bee.py test"
alias sbr="cd $PROJ; sudo python3 $PROJ/spelling_bee.py revise"
alias sbe="cd $PROJ; sudo python3 $PROJ/spelling_bee.py scan"
alias sbm="cd $PROJ; sudo python3 $PROJ/spelling_bee.py master"

alias download="cd $PROJ; sudo python3 spellit_download_log_overrides.py"
alias resample="cd $PROJ; ksh spellit_resample_audio.ksh"

alias define="cd $PROJ; sudo python3 $PROJ/dictionary_lookup.py"

# define functions

# function to generate file filter for WinSCP from a list
getfilefilter() {
    list=$1
    filter=""

    for word in $(cat ${list} | sed '$a\')
    do
        filterext='*'${word}'.*,'

        currlen=${#filter}
        addlen=${#filterext}
        nextlen=$((currlen + addlen))

        if [[ $nextlen -gt 1000 ]]; then
            filter=$(echo "${filter}" | sed 's/,$//g')
            echo ${filter}
            echo ""
            filter=""
        fi

        filter=${filter}${filterext}
    done

    filter=$(echo "${filter}" | sed 's/,$//g')
    currlen=${#filter}
    if [[ $currlen -gt 0 ]]; then
        echo ${filter}
        echo ""
        filter=""
    fi

}

# function to print word list for a year
printlist() {
    printyear=$1

    echo "=========================================="
    echo "Word lists for ${printyear}"
    echo "=========================================="
    echo ""

    listcount=$(ls -1 $DATA/spelling_bee_*${printyear}*.txt 2>/dev/null | wc -l)
    if [[ $listcount -gt 0 ]]; then
        echo "Word lists:"
        ls -1 $DATA/spelling_bee_*${printyear}*.txt | egrep -v "challenge" | sed 's/^.*spelling_bee_//g' | sed 's/.txt//g' | column -x
        echo ""    
    fi    
    
    listcount=$(ls -1 $DATA/spelling_bee_*${printyear}*-challenge.txt 2>/dev/null | wc -l)
    if [[ $listcount -gt 0 ]]; then
        echo "Challenge word lists:"
        ls -1 $DATA/spelling_bee_*${printyear}*-challenge.txt | sed 's/^.*spelling_bee_//g' | sed 's/.txt//g' | column -x
        echo ""
    fi
    
    #listcount=$(ls -1 $DATA/study/spelling_bee_practice_*${printyear}*.txt 2>/dev/null | wc -l)
    #if [[ $listcount -gt 0 ]]; then
        #echo "Practice word lists:"
        #ls -1 $DATA/study/spelling_bee_practice_*${printyear}*.txt | sed 's/^.*spelling_bee_//g' | sed 's/.txt//g' | column -x
        #echo ""
    #fi

}

# function to display help
help() {
    displayfilter="$1"
    if [[ $displayfilter = "" ]]; then
        displayfilter="2016 2017 2018 2019 how-to-spell my-list rulebook words-of-champs 2020"
    fi    

    echo "Spelling Bee instructions:"
    echo "To study   : sbs ${YEAR}-scr-local-001-grade-1 word lary-frees"
    echo "To practice: sbp ${YEAR}-scr-region-001-latin-basic word lary-frees"
    echo "To test    : sbt ${YEAR}-scr-region-003-asian-languages-challenge chapter 1"
    echo "To revise  : sbr ${YEAR}-scr-region-001-latin-challenge random 50"
    echo "To scan    : sbe ${YEAR}-scr-region-001-latin-challenge"
    echo ""

    # display word lists
    for year in $displayfilter
    do
        printlist ${year}
    done
}

# function to display most recent log for a test
showlog() {
    logfile=$DATA/log/spelling_bee_tests.log
    testname="$1"
    endpattern="End of Test Log"

    begln=$(($(sed -n "/^Spelling Bee ${testname}.*$/=" ${logfile} | sed '$!d') -1))
    sed -n "${begln},/${endpattern}/p" ${logfile}
    echo ""
}

# function to display all logs for a test
showlogs() {
    logfile=$DATA/log/spelling_bee_tests.log
    testname="$1"
    endpattern="End of Test Log"

    for ln in $(sed -n "/^Spelling Bee ${testname}.*$/=" ${logfile})
    do
        begln=$((${ln} -1))
        sed -n "${begln},/${endpattern}/p" ${logfile}
        echo ""
    done
}

# function to display most recent test result
showresult() {
    logfile=$DATA/log/spelling_bee_current_test.log
    column ${logfile}
    echo ""
}

# function to display errors from most recent test result
showerrors() {
    logfile=$DATA/log/spelling_bee_current_test.log
    head -3 ${logfile}
    egrep "^X" ${logfile} | column
    echo ""
}

# display instructions
help
