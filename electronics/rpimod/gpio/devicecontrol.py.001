#!/usr/bin/env python

#--------------------------------------------------------------------------------------------------
# File name   : devicecontroller.py
# Description : Generic GPIO device controller library
# Author      : Dito Manavalan
# Date        : 2015/12/02
#--------------------------------------------------------------------------------------------------

import RPi.GPIO as GPIO

deviceInitialized = False
deviceName = "Unknown"
deviceCircuitType = "Unknown"
deviceOffState = -1
devicePin = -1
devicePinState = -1

def device_initialize(vDeviceName, vCircuitType, vChannel):
    global deviceInitialized
    global deviceName
    global deviceCircuitType
    global deviceOffState
    global devicePin
    global devicePinState
    deviceName = vDeviceName
    deviceCircuitType = vCircuitType
    if deviceCircuitType == "POSITIVE":                       # POSITIVE circuit type indicates a GPIO.HIGH turns the device on
    	deviceOffState = GPIO.LOW
    else:
    	deviceOffState = GPIO.HIGH                            # NEGATIVE circuit type indicates a GPIO.LOW turns the device on
    devicePin = vChannel
    GPIO.setmode(GPIO.BOARD)                                  # Numbers pins by physical location
    GPIO.setup(devicePin, GPIO.OUT, initial=deviceOffState)   # Set pin mode as output and initial state as off
    devicePinState = deviceOffState
    deviceInitialized = True

def device_switch(vSwitchMode):
    global deviceInitialized
    global deviceName
    global deviceCircuitType
    global deviceOffState
    global devicePin
    global devicePinState
    if deviceInitialized == False:
        print "! " + deviceName + " not initialized"
    elif vSwitchMode == "ON":
        devicePinState = not deviceOffState                   # device on
    elif vSwitchMode == "OFF":
        devicePinState = deviceOffState                       # device off
    elif vSwitchMode == "TOGGLE":
        devicePinState = not devicePinState                   # device toggle
    else:
        devicePinState = deviceOffState                       # device off
    GPIO.output(devicePin, devicePinState)

def device_finalize():
    global deviceInitialized
    global deviceName
    global deviceCircuitType
    global deviceOffState
    global devicePin
    global devicePinState
    device_switch("OFF")
    GPIO.cleanup()                                            # Release resource
    deviceInitialized = False
    deviceName = "Unknown"
    deviceCircuitType = "Unknown"
    deviceOffState = -1
    devicePin = -1
    devicePinState = -1
