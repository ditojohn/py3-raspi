#!/usr/bin/env python

import RPi.GPIO as GPIO
import time
import rpi2lib.stdio.input as INPUT

colors = [0xFF0000, 0x00FF00, 0x0000FF, 0xFFFF00, 0xFF00FF, 0x00FFFF]
pins = {'pin_R':11, 'pin_G':12, 'pin_B':13}  # pins is a dict

GPIO.setmode(GPIO.BOARD)       # Numbers GPIOs by physical location
for i in pins:
    GPIO.setup(pins[i], GPIO.OUT)   # Set pins' mode is output
    GPIO.output(pins[i], GPIO.HIGH) # Set pins to high(+3.3V) to off led

p_R = GPIO.PWM(pins['pin_R'], 100)  # set Frequece to 2KHz
p_G = GPIO.PWM(pins['pin_G'], 100)
p_B = GPIO.PWM(pins['pin_B'], 100)

p_R.start(100)      # Initial duty Cycle = 0(leds off)
p_G.start(100)
p_B.start(100)

inputStr = ''
red = 100
blue = 100
green = 100

print "Press any keys (x to exit): "
print "R" + str(red) + " G" + str(green) + " B" + str(blue)

userInput = INPUT.getch.impl()
while userInput != 'x':
    inputStr += userInput
    if userInput == 'B':
        blue += 1
        if blue > 100:
            blue = 100
    elif userInput == 'b':
        blue -= 1
        if blue < 0:
            blue = 0
    elif userInput == 'G':
        green += 1
        if green > 100:
            green = 100
    elif userInput == 'g':
        green -= 1
        if green < 0:
            green = 0
    elif userInput == 'R':
        red += 1
        if red > 100:
            red = 100
    elif userInput == 'r':
        red -= 1
        if red < 0:
            red = 0
    p_R.ChangeDutyCycle(red)     # Change duty cycle
    p_G.ChangeDutyCycle(green)
    p_B.ChangeDutyCycle(blue)
    print "R" + str(red) + " G" + str(green) + " B" + str(blue)
    userInput = INPUT.getch.impl()

print "You entered: " + inputStr
p_R.stop()
p_G.stop()
p_B.stop()
for i in pins:
    GPIO.output(pins[i], GPIO.HIGH)    # Turn off all leds
GPIO.cleanup()

